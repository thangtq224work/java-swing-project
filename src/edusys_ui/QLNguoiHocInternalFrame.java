/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edusys_ui;

import DAO.DAOInterface;
import DAO.DAONguoiHoc;
import Entitys.KhoaHoc;
import Entitys.NguoiHoc;
import Entitys.NhanVien;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import utils.Auth;
import utils.Check;
import utils.HelperDate;

/**
 *
 * @author Thang
 */
public class QLNguoiHocInternalFrame extends javax.swing.JInternalFrame {

    static DAOInterface daoNH = new DAONguoiHoc();
    int index;
    DefaultTableModel tableModel;
    List<NguoiHoc> nguoiHocList = new ArrayList<>();
    boolean specifyBtnMoi;

    /**
     * Creates new form QLChuyenDeJInternalFrame
     */
    public QLNguoiHocInternalFrame() {
        initComponents();
        setting();
        customTable();
        if (nguoiHocList.size() > 0) {
            index = 0;
            fillToForm(index);
        }

    }

    private void setting() {
        tblBang.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        specifyBtnMoi = true;
        disableComponent(btnThem, txtMa);
        txtNgay.setDateFormatString(HelperDate.getFormat());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBang = new javax.swing.JTable();
        lblRecord = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnTim = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        txtNgay = new com.toedter.calendar.JDateChooser();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setClosable(true);
        setIconifiable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý người học");

        jLabel3.setText("Mã người học");

        jLabel5.setText("Họ vầ tên");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btn1.setText("|<");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("<<");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText(">>");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText(">|");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        tblBang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblBangMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblBang);

        lblRecord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRecord.setText("jLabel7");

        jLabel7.setText("Ngày sinh");

        jLabel8.setText("Số điện thoại");

        jLabel9.setText("Email");

        jLabel10.setText("Giới tính");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Tìm kiếm"));

        btnTim.setText("Tìm kiếm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTim)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonGroup2.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        buttonGroup2.add(rdoNu);
        rdoNu.setText("Nữ");

        jLabel11.setText("Ghi chú");

        txtGhiChu.setColumns(20);
        txtGhiChu.setLineWrap(true);
        txtGhiChu.setRows(5);
        txtGhiChu.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtGhiChu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnThem)
                                .addGap(18, 18, 18)
                                .addComponent(btnSua)
                                .addGap(18, 18, 18)
                                .addComponent(btnMoi)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa)
                                .addGap(31, 31, 31)
                                .addComponent(lblRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btn1)
                                .addGap(18, 18, 18)
                                .addComponent(btn2)
                                .addGap(18, 18, 18)
                                .addComponent(btn3)
                                .addGap(18, 18, 18)
                                .addComponent(btn4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2)
                                        .addGap(7, 7, 7))
                                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(37, 37, 37)
                                                .addComponent(rdoNam)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoNu))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(37, 37, 37)
                                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(19, 19, 19)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtMa, txtNgay});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnMoi)
                    .addComponent(btnXoa)
                    .addComponent(btn1)
                    .addComponent(btn2)
                    .addComponent(btn3)
                    .addComponent(btn4)
                    .addComponent(lblRecord))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtMa, txtNgay});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        NguoiHoc nguoiHoc = getForm();
        if (nguoiHoc != null) {
            int success = daoNH.updateToDB(nguoiHoc);
            if (success > 0) {
                nguoiHocList.set(index, nguoiHoc);
                JOptionPane.showMessageDialog(this, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                tableModel.setValueAt(nguoiHoc.getTenNH(), index, 1);
                tableModel.setValueAt(nguoiHoc.isGioiTinh() ? "Nam" : "Nữ", index, 2);
                try {
                    tableModel.setValueAt(HelperDate.parseString(nguoiHoc.getNgaySinh()), index, 3);
                } catch (ParseException ex) {
                    Logger.getLogger(QLNguoiHocInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                tableModel.setValueAt(nguoiHoc.getDienThoai(), index, 4);
                tableModel.setValueAt(nguoiHoc.getEmail(), index, 5);

            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại ", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblBangMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBangMousePressed
        // TODO add your handling code here:
        index = tblBang.getSelectedRow();
        fillToForm(index);
    }//GEN-LAST:event_tblBangMousePressed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        if (specifyBtnMoi) {
            index = tblBang.getSelectedRow();
            clearForm();
            btnMoi.setText("Hủy");
            disableComponent(btn1, btn2, btn3, btn4, btnXoa, btnSua, btnTim);
            enableComponent(btnThem, txtMa);
            specifyBtnMoi = false;
            System.out.println(index);
        } else {
            btnMoi.setText("Mới");
            System.out.println(index);
            disableComponent(btnThem, txtMa);
            enableComponent(btn1, btn2, btn3, btn4, btnXoa, btnSua, btnTim);
            specifyBtnMoi = true;
            fillToForm(index);
        }
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        btnFirst();
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        btnPrevious();
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        btnNext();
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        btnLast();
    }//GEN-LAST:event_btn4ActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String arr[] = {"Mã NH", "Họ tên", "Giới tính", "Ngày sinh", "Điện thoại", "Email", "Mã NV", "Ngày đăng kí"};

        NguoiHoc nguoiHoc = getForm();
        if (nguoiHoc != null) {
            int success = daoNH.insertToDB(nguoiHoc);
            if (success > 0) {
                JOptionPane.showMessageDialog(null, "Thêm người học thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                nguoiHocList.add(nguoiHoc);
                try {
                    tableModel.addRow(new Object[]{
                        nguoiHoc.getMaNH(), nguoiHoc.getTenNH(), nguoiHoc.isGioiTinh() ? "Nam" : "Nữ", HelperDate.parseString(nguoiHoc.getNgaySinh()), nguoiHoc.getDienThoai(), nguoiHoc.getEmail(), nguoiHoc.getMaNV(), HelperDate.parseString(nguoiHoc.getNgayDK())
                    });
                } catch (ParseException ex) {
                    Logger.getLogger(QLNguoiHocInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                index = tableModel.getRowCount() - 1;
                fillToForm(index);
                btnMoi.setText("Mới");
                System.out.println(index);
                disableComponent(btnThem);
                enableComponent(btn1, btn2, btn3, btn4, btnXoa, btnSua, btnTim);
                txtMa.setEnabled(false);
                specifyBtnMoi = true;
            } else {
                JOptionPane.showMessageDialog(null, "Thêm người học không thành công", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (Auth.getRole()) {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa người học " + txtMa.getText(), "Thông báo", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                NguoiHoc nguoiHoc = getForm();
                int success = daoNH.delete(nguoiHoc.getMaNH());
                if (success > 0) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    nguoiHocList.remove(index);
                    tableModel.removeRow(index);
                    if (tableModel.getRowCount() == 0) {
                        clearForm();
                    } else if (tableModel.getRowCount() == index) {
                        index--;
                        fillToForm(index);
                    } else {
                        fillToForm(index);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa không thành công", "Thông báo", JOptionPane.WARNING_MESSAGE);
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn không có quyền xóa", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        String find = txtTim.getText().trim();
        if (find.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nhập thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
        } else {
            int po = duyetList(find);
            if (po != -1) {
                JOptionPane.showMessageDialog(this, "Đã tìm thấy người học có chứa  : " + find, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                index = po;
                tblBang.setRowSelectionInterval(index, index);
                fillToForm(index);
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy người học có chứa  : " + find, "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            }
        }
    }//GEN-LAST:event_btnTimActionPerformed
    private void customTable() {
        String arr[] = {"Mã NH", "Họ tên", "Giới tính", "Ngày sinh", "Điện thoại", "Email", "Mã NV", "Ngày đăng kí"};
        tableModel = new DefaultTableModel(arr, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }

        };
        tblBang.setModel(tableModel);
        fillToTable();
    }

    private void fillToTable() {
        nguoiHocList = daoNH.getAll();
        tableModel.setRowCount(0);
        for (NguoiHoc nguoiHoc : nguoiHocList) {
            try {
                tableModel.addRow(new Object[]{
                    nguoiHoc.getMaNH(), nguoiHoc.getTenNH(), nguoiHoc.isGioiTinh() ? "Nam" : "Nữ", HelperDate.parseString(nguoiHoc.getNgaySinh()), nguoiHoc.getDienThoai(), nguoiHoc.getEmail(), nguoiHoc.getMaNV(), nguoiHoc.getNgayDK()
                });
            } catch (ParseException ex) {
                Logger.getLogger(QLNguoiHocInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void fillToForm(int i) {
        txtMa.setText(nguoiHocList.get(i).getMaNH());
        txtTen.setText(nguoiHocList.get(i).getTenNH());
        txtEmail.setText(nguoiHocList.get(i).getEmail());
        txtSDT.setText(nguoiHocList.get(i).getDienThoai());
        if (nguoiHocList.get(i).isGioiTinh()) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtGhiChu.setText(nguoiHocList.get(i).getGhiChu());
        txtNgay.setDate(nguoiHocList.get(i).getNgaySinh());
        tblBang.setRowSelectionInterval(i, i);
        lblRecord.setText((index + 1) + " / " + (nguoiHocList.size()));
    }

    private void clearForm() {
        txtMa.setText("");
        txtTen.setText("");
        txtEmail.setText("");
        txtGhiChu.setText("");
        rdoNam.setSelected(true);
//        Calendar calendar = Calendar.getInstance();
//        calendar.set(2000, 1, 1);
//        txtNgay.setDate(calendar.getTime());
        txtNgay.setDate(new Date());
        txtSDT.setText("");
        lblRecord.setText("? / " + (nguoiHocList.size()));
        tblBang.getSelectionModel().clearSelection();

    }

    private NguoiHoc getForm() {
        if (check()) {
            System.out.println(rdoNam.isSelected());
            return new NguoiHoc(txtMa.getText().trim(), txtTen.getText().trim(), txtSDT.getText().trim(), txtEmail.getText().trim(), txtGhiChu.getText().trim(), Auth.nv.getMaNV(), new Date(), txtNgay.getDate(), rdoNam.isSelected());
        }
        return null;

    }

    private boolean check() {
        String ma = txtMa.getText().trim(), ten = txtTen.getText().trim(), email = txtEmail.getText().trim(), sdt = txtSDT.getText().trim();
        if (!Check.checkNull(ma, ten)) {
            JOptionPane.showMessageDialog(this, "Nhập đủ dữ liệu", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!Check.checkLength(1, 7, ma)) {
            JOptionPane.showMessageDialog(this, "Mã NH từ 1 - 7 ký tự", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!Check.checkLength(1, 50, ten)) {
            JOptionPane.showMessageDialog(this, "Tên NV từ 1 - 50 ký tự", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!Check.isEmail(email)) {
            JOptionPane.showMessageDialog(this, "Email không hợp lệ", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!Check.checkLength(5, 100, email)) {
            JOptionPane.showMessageDialog(this, "Độ dài email không hợp lệ", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!Check.isSDT(sdt)) {
            JOptionPane.showMessageDialog(this, "SDT không hợp lệ", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;

    }

    private void btnFirst() {
        if (index == 0) {
            JOptionPane.showMessageDialog(this, "Đã đến bản ghi đầu", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {

            index = 0;
            fillToForm(index);
//        btn1.setEnabled(false);
        }
    }

    private void btnPrevious() {
        if (index > 0) {
            index--;
            fillToForm(index);
        } else {
            JOptionPane.showMessageDialog(this, "Đã đến bản ghi đầu", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void btnNext() {
        if (index < nguoiHocList.size() - 1) {
            index++;
            fillToForm(index);
//            btn1.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "Đã đến bản ghi cuối", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void btnLast() {
        if (index == nguoiHocList.size() - 1) {
            JOptionPane.showMessageDialog(this, "Đã đến bản ghi cuối", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//            btn1.setEnabled(true);
        } else {
            index = nguoiHocList.size() - 1;
            fillToForm(index);
        }
    }

    private void disableComponent(JComponent... components) {
        for (JComponent component : components) {
            component.setEnabled(false);
        }
    }

    private void enableComponent(JComponent... components) {
        for (JComponent component : components) {
            component.setEnabled(true);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRecord;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblBang;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMa;
    private com.toedter.calendar.JDateChooser txtNgay;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables

    private int duyetList(String find) {
        int result = -1;
        for (int i = 0; i < nguoiHocList.size(); i++) {
            if (nguoiHocList.get(i).getTenNH().contains(find)) {
                result = i;
                break;
            }
        }
        return result;
    }
}
